@page "/Request/{name?}"
@using Postboy.Data
@using Postboy.Data.ContentTypes;
@using Newtonsoft.Json
@using System.Reflection
@inject NavigationManager Navigation
@inject IRequestStorageService Storage
@inject IMessageService Notification
@inject IRequestExecutorService Executor
@inject IComponentInteractionService Interaction
@inject ModalService Modal

@if (Name is not null)
{
    @if (Request is null)
    {
        <h3>Request</h3>
    }
    else
    {
        <h3>
            <span style="display:@(_editTitle?"none":"");">
                @Name
            </span>
            @if (!_editTitle)
            {
                <Dropdown>
                    <Overlay>
                        <Menu>
                            <MenuItem OnClick="EditTitle">
                                <span>
                                    <Icon Type="edit" />
                                    <span>Edit Name</span>
                                </span>
                            </MenuItem>
                            <MenuItem OnClick="SaveChanges">
                                <span>
                                    <Icon Type="save" />
                                    <span>Save</span>
                                </span>
                            </MenuItem>
                            <MenuItem OnClick=@(() => AddToFolder(Request.Id))>
                                <span>
                                    <Icon Type="folder-add" />
                                    <span>To folder</span>
                                </span>
                            </MenuItem>
                            <MenuItem OnClick=@(() => Duplicate(Request.Id))>
                                <span>
                                    <Icon Type="copy" />
                                    <span>Duplicate</span>
                                </span>
                            </MenuItem>
                            <MenuItem OnClick="Delete">
                                <span>
                                    <Icon Type="delete"/>
                                    <span>Delete</span>
                                </span>
                            </MenuItem>
                        </Menu>
                    </Overlay>
                    <ChildContent>
                        <Button>
                            <Icon Style="font-size:22px;" Type="menu" />
                        </Button>
                    </ChildContent>
                </Dropdown>
                <Tooltip Placement="@Placement.Bottom" Title="Save">
                    <Button @onclick="SaveChanges">
                        <Icon Style="font-size:22px;" Type="save" />
                    </Button>
                </Tooltip>
                
            }
            else
            {
                <Input Style="font-size:22px;width:300px;" @bind-Value=Request.Name OnPressEnter="args => EditTitle()"/>
                <Button OnClick="EditTitle">
                    <Icon Type="check" />
                </Button>
            }
        </h3>
    }
}
else
{

    <GridRow Gutter="16" Justify="left" Align="top" Style="@($"margin-bottom:{Constants.MarginBottomNormal}px;")">
        <GridCol Span="10">
            <Input @bind-Value=Request.Name style="font-size:18px;height:32px;" Placeholder="enter request name" />
        </GridCol>
        <GridCol>
            <Tooltip Placement="@Placement.Bottom" Title="To folder">
                <Button OnClick="@(() => AddToFolder(Request.Id))">
                    <Icon Style="font-size:22px;" Type="folder-add" />
                </Button>
            </Tooltip>
            <Tooltip Placement="@Placement.Bottom" Title="Save">
                <Button @onclick="SaveChanges">
                    <Icon Style="font-size:22px;" Type="save" />
                </Button>
            </Tooltip>
        </GridCol>
    </GridRow>
}

@if (Request is null)
{
    <Icon Type="loading" Theme="outline" Style="font-size: 24px" Spin />
}
else
{
    <InputGroup>
        <GridRow>
            <GridCol>
                <Select @bind-Value=Request.Method DataSource="Methods" Size="@InputSize.Large" 
                    Style="margin-right:-2px;width:110px;" />
            </GridCol>
            <GridCol Span="16">
                <Input @bind-Value=Request.Url Size="@InputSize.Large" 
                    Style="height:40px;border-radius:0px;"/>
            </GridCol>
            <GridCol Span="1">
                <Button OnClick="Execute" Type="@ButtonType.Primary" Size="@InputSize.Large"
                    Style="border-bottom-left-radius:0px;border-top-left-radius:0px;">
                    <Icon Type="send" />
                </Button>
            </GridCol>
        </GridRow>
    </InputGroup>

    <Divider />

    <Collapse>
        <HeadersView @bind-Value=Request.Headers />
        <AutoHeadersView @bind-Value=Request.AutoHeaders/>
    </Collapse>

    <Divider />

    <GridRow Gutter="16" Justify="left" Align="top" Style=@($"margin-bottom:{Constants.MarginBottomNormal}px;")>
        <GridCol Span="2">
            Content-Type
        </GridCol>
        <GridCol Span="4">
            <Select @bind-Value=Request.ContentType DataSource="ContentTypes" />
        </GridCol>
    </GridRow>

    <GridRow Gutter="16" Justify="left" Align="top">
        <GridCol Span="2">
            Body
        </GridCol>
        <GridCol Span="14">
            @if (Request.ContentType is ContentTypeNone)
            {
                @("None")
            }
            else if (Request.ContentType is ContentTypeJson)
            {
                <TextArea @bind-Value=Request.Body/>
            }
            else if (Request.ContentType is ContentTypeFormEncoded)
            {
                <FormUrlEncodedView @bind-Value=Request.Body/>
            }
        </GridCol>
    </GridRow>
}
<br />
<ResponseView Value="Response" Loading="_waitingForResponse" />
<AddFolderToRequestModal @ref=_addFolder/>

